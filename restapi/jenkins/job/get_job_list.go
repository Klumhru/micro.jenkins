package job

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-swagger/go-swagger/httpkit/middleware"
)

// GetJobListHandlerFunc turns a function with the right signature into a get job list handler
type GetJobListHandlerFunc func() middleware.Responder

// Handle executing the request and returning a response
func (fn GetJobListHandlerFunc) Handle() middleware.Responder {
	return fn()
}

// GetJobListHandler interface for that can handle valid get job list params
type GetJobListHandler interface {
	Handle() middleware.Responder
}

// NewGetJobList creates a new http.Handler for the get job list operation
func NewGetJobList(ctx *middleware.Context, handler GetJobListHandler) *GetJobList {
	return &GetJobList{Context: ctx, Handler: handler}
}

/*GetJobList swagger:route GET /api/jenkins/jobs job getJobList

GetJobList get job list API

*/
type GetJobList struct {
	Context *middleware.Context
	Handler GetJobListHandler
}

func (o *GetJobList) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, _ := o.Context.RouteInfo(r)

	if err := o.Context.BindValidRequest(r, route, nil); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle() // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
